/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        if (list2 == NULL) return list1;
        if (list1 == NULL) return list2;
        if (list1->val > list2->val) {
            ListNode* temp = list1;
            list1 = list2;
            list2 = temp;
        }

        ListNode* res = list1; // head
        ListNode* prev = NULL; //fresh list
        while(list1 != NULL && list2 != NULL) {
            while (list1 != NULL && list1->val <= list2->val) {
                 prev = list1;  // new list on place
                 list1 = list1->next;
            }
            prev->next = list2;
            ListNode* temp = list1;
            list1 = list2;
            list2 = temp;
        }

        return res;
        
    }
};
